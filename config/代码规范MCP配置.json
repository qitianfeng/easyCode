{
  "mcpServers": {
    "project-architecture-analyzer": {
      "command": "python",
      "args": ["./项目架构识别MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "ANALYSIS_DEPTH": "deep",
        "CONFIDENCE_THRESHOLD": "50"
      },
      "description": "项目架构识别工具，智能识别项目的具体架构模式",
      "tools": [
        {
          "name": "analyze_full_architecture",
          "description": "完整分析项目架构，包括架构模式、分层结构、命名约定等",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "detect_architecture_patterns",
          "description": "检测项目使用的架构模式（分层、微服务、六边形、DDD等）",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "analyze_layer_structure",
          "description": "分析项目的分层结构和包组织方式",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "extract_naming_conventions",
          "description": "提取项目的命名约定和编码风格",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "detect_framework_stack",
          "description": "检测项目使用的技术栈和框架",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        }
      ]
    },

    "intelligent-code-generator": {
      "command": "python",
      "args": ["./智能代码生成MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "TEMPLATE_PATH": "./templates"
      },
      "description": "智能代码生成工具，基于项目架构识别结果生成符合项目架构的代码",
      "tools": [
        {
          "name": "generate_module_by_architecture",
          "description": "根据项目架构模式生成模块代码",
          "parameters": {
            "module_name": {
              "type": "string",
              "description": "模块名称"
            },
            "fields": {
              "type": "array",
              "description": "字段定义"
            },
            "architecture_profile": {
              "type": "object",
              "description": "项目架构分析结果"
            }
          }
        },
        {
          "name": "generate_layered_module",
          "description": "生成分层架构模块",
          "parameters": {
            "module_name": {"type": "string"},
            "fields": {"type": "array"},
            "layer_structure": {"type": "object"}
          }
        },
        {
          "name": "generate_microservice_module",
          "description": "生成微服务架构模块",
          "parameters": {
            "module_name": {"type": "string"},
            "fields": {"type": "array"},
            "service_config": {"type": "object"}
          }
        },
        {
          "name": "generate_hexagonal_module",
          "description": "生成六边形架构模块",
          "parameters": {
            "module_name": {"type": "string"},
            "fields": {"type": "array"}
          }
        },
        {
          "name": "generate_ddd_module",
          "description": "生成DDD架构模块",
          "parameters": {
            "module_name": {"type": "string"},
            "fields": {"type": "array"},
            "domain_config": {"type": "object"}
          }
        }
      ]
    },

    "code-standard-checker": {
      "command": "python",
      "args": ["./代码规范检查MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "ANALYSIS_DEPTH": "deep",
        "EXCLUDE_PATTERNS": "node_modules,target,build,dist,.git",
        "INCLUDE_EXTENSIONS": ".java,.js,.ts,.py,.go,.cs",
        "OUTPUT_FORMAT": "json"
      },
      "description": "代码规范检查工具，基于《代码开发规则规范》检查代码质量",
      "tools": [
        {
          "name": "check_all_standards",
          "description": "检查所有代码规范，包括命名、架构、安全、文档等",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "check_naming_conventions",
          "description": "检查命名规范（类名、方法名、变量名等）",
          "parameters": {
            "file_path": {
              "type": "string", 
              "description": "要检查的文件路径"
            }
          }
        },
        {
          "name": "check_architecture_rules",
          "description": "检查架构规则（分层架构、循环依赖等）",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "check_security_rules",
          "description": "检查安全规范（SQL注入、输入验证等）",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "check_documentation",
          "description": "检查文档规范（JavaDoc、注释等）",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "check_test_coverage",
          "description": "检查测试覆盖率",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "generate_compliance_report",
          "description": "生成代码规范合规报告",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            },
            "output_format": {
              "type": "string",
              "description": "报告格式：json, html, markdown",
              "default": "json"
            }
          }
        }
      ]
    },
    
    "code-generator": {
      "command": "python",
      "args": ["./代码生成MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "BASE_PACKAGE": "com.example.project",
        "AUTHOR": "System Generated",
        "VERSION": "1.0.0",
        "TEMPLATE_PATH": "./templates"
      },
      "description": "代码生成工具，基于《代码开发规则规范》生成符合规范的代码",
      "tools": [
        {
          "name": "generate_crud_module",
          "description": "生成完整的CRUD模块（Entity、Repository、Service、Controller、DTO、Test）",
          "parameters": {
            "entity_name": {
              "type": "string",
              "description": "实体类名称（PascalCase）"
            },
            "fields": {
              "type": "array",
              "description": "字段定义数组",
              "items": {
                "type": "object",
                "properties": {
                  "name": {"type": "string", "description": "字段名（camelCase）"},
                  "type": {"type": "string", "description": "字段类型（String, Long, Integer等）"},
                  "comment": {"type": "string", "description": "字段注释"},
                  "nullable": {"type": "boolean", "description": "是否可为空"},
                  "unique": {"type": "boolean", "description": "是否唯一"}
                }
              }
            },
            "project_info": {
              "type": "object",
              "description": "项目信息",
              "properties": {
                "base_package": {"type": "string", "description": "基础包名"},
                "author": {"type": "string", "description": "作者"},
                "version": {"type": "string", "description": "版本"}
              }
            }
          }
        },
        {
          "name": "generate_entity",
          "description": "生成JPA实体类",
          "parameters": {
            "entity_name": {"type": "string", "description": "实体类名称"},
            "fields": {"type": "array", "description": "字段定义"}
          }
        },
        {
          "name": "generate_repository",
          "description": "生成Repository接口",
          "parameters": {
            "entity_name": {"type": "string", "description": "实体类名称"}
          }
        },
        {
          "name": "generate_service",
          "description": "生成Service业务逻辑类",
          "parameters": {
            "entity_name": {"type": "string", "description": "实体类名称"}
          }
        },
        {
          "name": "generate_controller",
          "description": "生成REST Controller",
          "parameters": {
            "entity_name": {"type": "string", "description": "实体类名称"}
          }
        },
        {
          "name": "generate_dto",
          "description": "生成DTO类（Request、Response）",
          "parameters": {
            "entity_name": {"type": "string", "description": "实体类名称"},
            "dto_type": {"type": "string", "description": "DTO类型：create, update, response"}
          }
        },
        {
          "name": "generate_test_classes",
          "description": "生成测试类",
          "parameters": {
            "entity_name": {"type": "string", "description": "实体类名称"},
            "test_types": {"type": "array", "description": "测试类型：unit, integration, controller"}
          }
        },
        {
          "name": "generate_sql_script",
          "description": "生成数据库建表脚本",
          "parameters": {
            "entity_name": {"type": "string", "description": "实体类名称"},
            "fields": {"type": "array", "description": "字段定义"},
            "database_type": {"type": "string", "description": "数据库类型：mysql, postgresql, oracle", "default": "mysql"}
          }
        }
      ]
    },
    
    "code-quality-analyzer": {
      "command": "python",
      "args": ["./代码质量分析MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "QUALITY_THRESHOLD": "80",
        "ANALYSIS_TOOLS": "sonar,checkstyle,pmd"
      },
      "description": "代码质量分析工具，提供深度的代码质量检查和建议",
      "tools": [
        {
          "name": "analyze_code_quality",
          "description": "分析代码质量，包括复杂度、重复度、可维护性等",
          "parameters": {
            "project_path": {"type": "string", "description": "项目路径"},
            "analysis_scope": {"type": "string", "description": "分析范围：all, changed, specific", "default": "all"}
          }
        },
        {
          "name": "detect_code_smells",
          "description": "检测代码异味",
          "parameters": {
            "file_path": {"type": "string", "description": "文件路径"}
          }
        },
        {
          "name": "suggest_refactoring",
          "description": "提供重构建议",
          "parameters": {
            "code_snippet": {"type": "string", "description": "代码片段"}
          }
        }
      ]
    },
    
    "test-generator": {
      "command": "python", 
      "args": ["./测试生成MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "TEST_FRAMEWORK": "junit5",
        "MOCK_FRAMEWORK": "mockito",
        "COVERAGE_THRESHOLD": "80"
      },
      "description": "测试用例生成工具，自动生成单元测试、集成测试",
      "tools": [
        {
          "name": "generate_unit_tests",
          "description": "生成单元测试",
          "parameters": {
            "class_name": {"type": "string", "description": "要测试的类名"},
            "methods": {"type": "array", "description": "要测试的方法列表"}
          }
        },
        {
          "name": "generate_integration_tests",
          "description": "生成集成测试",
          "parameters": {
            "module_name": {"type": "string", "description": "模块名称"}
          }
        },
        {
          "name": "generate_mock_data",
          "description": "生成测试数据",
          "parameters": {
            "entity_name": {"type": "string", "description": "实体类名"},
            "data_size": {"type": "integer", "description": "数据量", "default": 100}
          }
        }
      ]
    },
    
    "documentation-generator": {
      "command": "python",
      "args": ["./文档生成MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "DOC_FORMAT": "markdown",
        "API_DOC_TOOL": "swagger"
      },
      "description": "文档生成工具，自动生成API文档、代码文档",
      "tools": [
        {
          "name": "generate_api_documentation",
          "description": "生成API文档",
          "parameters": {
            "controller_path": {"type": "string", "description": "Controller文件路径"}
          }
        },
        {
          "name": "generate_code_documentation",
          "description": "生成代码文档",
          "parameters": {
            "source_path": {"type": "string", "description": "源码路径"}
          }
        },
        {
          "name": "update_readme",
          "description": "更新README文档",
          "parameters": {
            "project_info": {"type": "object", "description": "项目信息"}
          }
        }
      ]
    }
  }
}
