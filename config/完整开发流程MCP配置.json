{
  "mcpServers": {
    "requirements-document-parser": {
      "command": "python",
      "args": ["./mcp-tools/01-requirements/需求文档解析MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./"
      },
      "description": "需求文档解析工具，支持多种输入方式：CodeSign链接、截图文件夹、文档文件等",
      "tools": [
        {
          "name": "parse_requirements_input",
          "description": "解析需求输入，支持多种格式",
          "parameters": {
            "input_data": {
              "type": "object",
              "description": "输入数据",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["codesign_url", "screenshot_folder", "document_file", "direct_text"],
                  "description": "输入类型"
                },
                "content": {
                  "type": "string",
                  "description": "输入内容（URL、文件路径或文本内容）"
                }
              }
            }
          }
        },
        {
          "name": "get_supported_formats",
          "description": "获取支持的输入格式列表",
          "parameters": {}
        }
      ]
    },

    "requirements-analyzer": {
      "command": "python",
      "args": ["./mcp-tools/01-requirements/需求分析MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./"
      },
      "description": "需求分析工具，将产品需求转化为技术需求",
      "tools": [
        {
          "name": "analyze_product_requirements",
          "description": "分析产品需求文档，提取功能需求、非功能需求、用户角色等",
          "parameters": {
            "requirements_text": {
              "type": "string",
              "description": "产品需求文档内容"
            }
          }
        },
        {
          "name": "generate_technical_specification",
          "description": "基于需求分析生成技术规格说明",
          "parameters": {}
        }
      ]
    },

    "user-story-generator": {
      "command": "python",
      "args": ["./mcp-tools/01-requirements/用户故事生成MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./"
      },
      "description": "用户故事生成工具，基于需求分析生成用户故事和Sprint计划",
      "tools": [
        {
          "name": "generate_user_stories",
          "description": "基于需求分析结果生成用户故事",
          "parameters": {
            "requirements_analysis": {
              "type": "object",
              "description": "需求分析结果"
            }
          }
        },
        {
          "name": "generate_sprint_plan",
          "description": "基于用户故事生成Sprint计划",
          "parameters": {
            "user_stories": {
              "type": "array",
              "description": "用户故事列表"
            },
            "sprint_capacity": {
              "type": "integer",
              "description": "Sprint容量（故事点）",
              "default": 20
            }
          }
        }
      ]
    },

    "design-document-parser": {
      "command": "python",
      "args": ["./mcp-tools/02-design/设计文档解析MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./"
      },
      "description": "设计文档解析工具，支持直接从开发设计文档开始，跳过需求分析阶段",
      "tools": [
        {
          "name": "parse_design_document",
          "description": "解析设计文档，提取技术设计信息",
          "parameters": {
            "input_data": {
              "type": "object",
              "description": "输入数据",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["design_document_file", "design_document_url", "design_screenshots", "direct_design_text"],
                  "description": "输入类型"
                },
                "content": {
                  "type": "string",
                  "description": "输入内容（文件路径、URL或文本内容）"
                }
              }
            }
          }
        },
        {
          "name": "generate_implementation_plan",
          "description": "基于设计文档生成实施计划",
          "parameters": {
            "parsed_design": {
              "type": "object",
              "description": "解析后的设计文档"
            }
          }
        }
      ]
    },

    "design-document-generator": {
      "command": "python",
      "args": ["./mcp-tools/02-design/设计文档生成MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./"
      },
      "description": "设计文档生成工具，基于需求分析结果生成完整的技术设计文档",
      "tools": [
        {
          "name": "generate_design_document",
          "description": "基于需求分析结果生成完整的技术设计文档",
          "parameters": {
            "input_data": {
              "type": "object",
              "description": "输入数据",
              "properties": {
                "requirements_analysis": {
                  "type": "object",
                  "description": "需求分析结果"
                },
                "user_stories": {
                  "type": "array",
                  "description": "用户故事列表"
                },
                "architecture_design": {
                  "type": "object",
                  "description": "架构设计结果"
                },
                "project_context": {
                  "type": "object",
                  "description": "项目上下文信息"
                }
              }
            }
          }
        },
        {
          "name": "save_design_document",
          "description": "保存设计文档到文件",
          "parameters": {
            "design_document": {
              "type": "object",
              "description": "设计文档内容"
            },
            "output_path": {
              "type": "string",
              "description": "输出文件路径（可选）"
            }
          }
        }
      ]
    },

    "architecture-designer": {
      "command": "python",
      "args": ["./mcp-tools/02-design/架构设计MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./"
      },
      "description": "架构设计工具，基于需求和用户故事设计系统架构",
      "tools": [
        {
          "name": "design_system_architecture",
          "description": "设计系统架构，包括架构模式、组件设计、技术栈推荐",
          "parameters": {
            "requirements_analysis": {
              "type": "object",
              "description": "需求分析结果"
            },
            "user_stories": {
              "type": "array",
              "description": "用户故事列表"
            }
          }
        }
      ]
    },

    "project-architecture-analyzer": {
      "command": "python",
      "args": ["./mcp-tools/03-architecture/项目架构识别MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "ANALYSIS_DEPTH": "deep",
        "CONFIDENCE_THRESHOLD": "50"
      },
      "description": "项目架构识别工具，智能识别现有项目的具体架构模式",
      "tools": [
        {
          "name": "analyze_full_architecture",
          "description": "完整分析项目架构，包括架构模式、分层结构、命名约定等",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        },
        {
          "name": "detect_architecture_patterns",
          "description": "检测项目使用的架构模式（分层、微服务、六边形、DDD等）",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        }
      ]
    },

    "intelligent-code-generator": {
      "command": "python",
      "args": ["./mcp-tools/04-generation/智能代码生成MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "TEMPLATE_PATH": "./templates"
      },
      "description": "智能代码生成工具，基于项目架构识别结果生成符合项目架构的代码",
      "tools": [
        {
          "name": "generate_module_by_architecture",
          "description": "根据项目架构模式生成模块代码",
          "parameters": {
            "module_name": {
              "type": "string",
              "description": "模块名称"
            },
            "fields": {
              "type": "array",
              "description": "字段定义"
            },
            "architecture_profile": {
              "type": "object",
              "description": "项目架构分析结果"
            }
          }
        }
      ]
    },

    "code-standard-checker": {
      "command": "python",
      "args": ["./mcp-tools/04-generation/代码规范检查MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "ANALYSIS_DEPTH": "deep"
      },
      "description": "代码规范检查工具，基于开发规范检查代码质量",
      "tools": [
        {
          "name": "check_all_standards",
          "description": "检查所有代码规范，包括命名、架构、安全、文档等",
          "parameters": {
            "project_path": {
              "type": "string",
              "description": "项目根目录路径"
            }
          }
        }
      ]
    },

    "test-generator": {
      "command": "python",
      "args": ["./mcp-tools/05-testing/测试生成MCP工具.py"],
      "env": {
        "PROJECT_ROOT": "./",
        "TEST_FRAMEWORK": "junit5"
      },
      "description": "测试生成工具，为生成的代码自动创建测试用例",
      "tools": [
        {
          "name": "generate_comprehensive_tests",
          "description": "生成全面的测试用例，包括单元测试、集成测试、API测试",
          "parameters": {
            "generated_code": {
              "type": "object",
              "description": "生成的代码文件"
            },
            "architecture_profile": {
              "type": "object",
              "description": "项目架构分析结果"
            }
          }
        }
      ]
    },

    "oceanbase-dev": {
      "command": "node",
      "args": ["./mcp-tools/oceanbase-mcp.js"],
      "env": {
        "OCEANBASE_HOST": "127.0.0.1",
        "OCEANBASE_PORT": "2881",
        "OCEANBASE_USER": "root@dev_tenant",
        "OCEANBASE_PASSWORD": "dev_password",
        "OCEANBASE_DATABASE": "dev_db"
      },
      "description": "OceanBase数据库连接工具，用于数据库操作和查询"
    }
  },

  "workflows": {
    "complete_development_flow": {
      "name": "完整开发流程",
      "description": "从需求分析到代码生成的完整开发流程",
      "steps": [
        {
          "step": 1,
          "name": "需求分析",
          "tools": ["requirements-analyzer", "user-story-generator"],
          "description": "分析产品需求，生成用户故事和Sprint计划"
        },
        {
          "step": 2,
          "name": "架构设计",
          "tools": ["architecture-designer"],
          "description": "基于需求设计系统架构"
        },
        {
          "step": 3,
          "name": "现有架构识别",
          "tools": ["project-architecture-analyzer"],
          "description": "识别现有项目的架构模式和编码规范"
        },
        {
          "step": 4,
          "name": "代码生成",
          "tools": ["intelligent-code-generator", "code-standard-checker"],
          "description": "基于架构识别结果生成符合项目规范的代码"
        },
        {
          "step": 5,
          "name": "测试生成",
          "tools": ["test-generator"],
          "description": "为生成的代码创建测试用例"
        }
      ]
    },

    "new_feature_development": {
      "name": "新功能开发",
      "description": "在现有项目中开发新功能的流程",
      "steps": [
        {
          "step": 1,
          "name": "架构识别",
          "tools": ["project-architecture-analyzer"],
          "description": "识别现有项目架构"
        },
        {
          "step": 2,
          "name": "功能设计",
          "tools": ["requirements-analyzer"],
          "description": "分析新功能需求"
        },
        {
          "step": 3,
          "name": "代码生成",
          "tools": ["intelligent-code-generator"],
          "description": "生成符合现有架构的代码"
        },
        {
          "step": 4,
          "name": "质量检查",
          "tools": ["code-standard-checker"],
          "description": "检查代码质量和规范"
        },
        {
          "step": 5,
          "name": "测试生成",
          "tools": ["test-generator"],
          "description": "生成测试用例"
        }
      ]
    },

    "requirements_to_design_document": {
      "name": "需求到设计文档",
      "description": "从产品需求生成技术设计文档的流程",
      "steps": [
        {
          "step": 1,
          "name": "需求解析",
          "tools": ["requirements-document-parser"],
          "description": "解析产品需求文档"
        },
        {
          "step": 2,
          "name": "需求分析",
          "tools": ["requirements-analyzer"],
          "description": "分析需求，生成功能需求和非功能需求"
        },
        {
          "step": 3,
          "name": "用户故事生成",
          "tools": ["user-story-generator"],
          "description": "基于需求生成用户故事和Sprint计划"
        },
        {
          "step": 4,
          "name": "架构设计",
          "tools": ["architecture-designer"],
          "description": "设计系统架构和技术栈"
        },
        {
          "step": 5,
          "name": "设计文档生成",
          "tools": ["design-document-generator"],
          "description": "生成完整的技术设计文档"
        }
      ]
    },

    "design_document_development": {
      "name": "设计文档开发",
      "description": "从现有设计文档开始的开发流程，跳过需求分析阶段",
      "steps": [
        {
          "step": 1,
          "name": "设计文档解析",
          "tools": ["design-document-parser"],
          "description": "解析设计文档，提取技术设计信息"
        },
        {
          "step": 2,
          "name": "现有架构识别",
          "tools": ["project-architecture-analyzer"],
          "description": "识别现有项目的架构模式和编码规范"
        },
        {
          "step": 3,
          "name": "代码生成",
          "tools": ["intelligent-code-generator"],
          "description": "基于设计文档和现有架构生成代码"
        },
        {
          "step": 4,
          "name": "质量检查",
          "tools": ["code-standard-checker"],
          "description": "检查代码质量和规范"
        },
        {
          "step": 5,
          "name": "测试生成",
          "tools": ["test-generator"],
          "description": "生成测试用例"
        }
      ]
    }
  },

  "settings": {
    "default_workflow": "new_feature_development",
    "auto_run_tests": true,
    "code_quality_threshold": 80,
    "architecture_confidence_threshold": 60
  }
}
